#ifndef CMOVERESOURCECOMMAND_H
#define CMOVERESOURCECOMMAND_H

#include "IUndoCommand.h"
#include "Editor/CEditorApplication.h"
#include <Core/GameProject/CResourceEntry.h>

class CMoveResourceCommand : public IUndoCommand
{
    CResourceEntry *mpEntry;
    TString mOldDirPath;
    TString mNewDirPath;
    bool mOldDirAutoGenerated;

public:
    CMoveResourceCommand(CResourceEntry *pEntry, CVirtualDirectory *pNewDir)
        : IUndoCommand("Move Resource")
        , mpEntry(pEntry)
        , mOldDirPath(pEntry->DirectoryPath())
        , mNewDirPath(pNewDir->FullPath())
        , mOldDirAutoGenerated(pEntry->HasFlag(eREF_AutoResDir))
    {}

    void undo()
    {
        bool Success = mpEntry->Move(mOldDirPath, mOldDirAutoGenerated);
        ASSERT(Success); // todo better error handling
        gpEdApp->ResourceRenamed(mpEntry);
    }

    void redo()
    {
        // note: it doesn't matter if the new directory was auto-generated, since the
        // purpose of tracking that flag is to detect which resources have been auto-categorized.
        // if this is being called, even if the new directory is auto-generated, it means the
        // user is intentionally placing it here, so it should be treated as a custom directory
        bool Success = mpEntry->Move(mNewDirPath);
        ASSERT(Success); // todo better error handling
        gpEdApp->ResourceRenamed(mpEntry);
    }

    bool AffectsCleanState() const { return false; }
};

#endif // CMOVERESOURCECOMMAND_H
